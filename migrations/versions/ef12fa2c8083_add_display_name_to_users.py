"""add display_name to users

Revision ID: ef12fa2c8083
Revises: 
Create Date: 2025-10-29 12:20:14.251448

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ef12fa2c8083'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.alter_column('details',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.alter_column('ip_address',
               existing_type=postgresql.INET(),
               type_=sa.String(length=64),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('ix_audit_logs_action'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_created_at'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_user_id'))
        batch_op.drop_constraint(batch_op.f('audit_logs_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.add_column(sa.Column('display_name', sa.String(length=120), nullable=True))
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)

    with op.batch_alter_table('employeeskills', schema=None) as batch_op:
        batch_op.alter_column('level',
               existing_type=sa.CHAR(length=2),
               type_=sa.String(length=1),
               nullable=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'user'::character varying"))
        batch_op.drop_index(batch_op.f('ux_users_email_ci'), postgresql_where='(email IS NOT NULL)')
        batch_op.drop_index(batch_op.f('ux_users_username_ci'))
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.drop_constraint(batch_op.f('users_created_by_fkey'), type_='foreignkey')
        batch_op.drop_column('last_login')
        batch_op.drop_column('created_at')
        batch_op.drop_column('created_by')
        batch_op.drop_column('is_active')
        batch_op.drop_column('signup_method')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('signup_method', sa.VARCHAR(length=20), server_default=sa.text("'self'::character varying"), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('users_created_by_fkey'), 'users', ['created_by'], ['id'], ondelete='SET NULL')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index(batch_op.f('ux_users_username_ci'), [sa.literal_column('lower(username::text)')], unique=True)
        batch_op.create_index(batch_op.f('ux_users_email_ci'), [sa.literal_column('lower(email::text)')], unique=True, postgresql_where='(email IS NOT NULL)')
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'user'::character varying"))

    with op.batch_alter_table('employeeskills', schema=None) as batch_op:
        batch_op.alter_column('level',
               existing_type=sa.String(length=1),
               type_=sa.CHAR(length=2),
               nullable=True)

    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.drop_column('display_name')

    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('audit_logs_user_id_fkey'), 'users', ['user_id'], ['id'], ondelete='SET NULL')
        batch_op.create_index(batch_op.f('ix_audit_logs_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_created_at'), [sa.literal_column('created_at DESC')], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_action'), ['action'], unique=False)
        batch_op.alter_column('ip_address',
               existing_type=sa.String(length=64),
               type_=postgresql.INET(),
               existing_nullable=True)
        batch_op.alter_column('details',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)

    # ### end Alembic commands ###
